package application;

import console.Console;

public class Game {
	Console console;
	Board board; // z konsoli

	public Game(Console c) {
		console = c;
		board = console.getBoard();
	}

	public void goThroughtFields() throws EndOfGameException {
		int nNeighbours;

		for (int i = 0; i < board.getBoardList().size(); i++) {
			nNeighbours = checkField(i);
			board.getBoardList().get(i).putNeighbours(nNeighbours);
		}
		int countFalse = 0;
		for (int i = 0; i < board.getBoardList().size(); i++) {
			board.getBoardList().get(i).checkNeighbours();
			if (!(board.getBoardList().get(i).getLifeStatus()))
				countFalse++;
		}
		
		console.writeOnConsole();
		
		if (countFalse == board.getBoardList().size() - 1)
			throw new EndOfGameException();
	}

	private int checkField(int i) {
		int x, y;
		int nNeighbours = 0;

		x = board.getBoardList().get(i).getCoordinates().x;
		y = board.getBoardList().get(i).getCoordinates().y;

		for (int j = -1; j < 2; j++) {
			for (int l = -1; l < 2; l++) {
				x += l;
				y += j;

				if (x == -1)
					x = board.getRows() - 1;
				if (x == board.getRows())
					x = 0;
				if (y == -1)
					y = board.getColumns() - 1;
				if (y == board.getColumns())
					y = 0;

				if (!(l == 0 && j == 0))
					if (board.getBoardList().get(x + y * board.getRows()).getLifeStatus())
						nNeighbours++;
			}
		}

		return nNeighbours;
	}

}
