package interfacepart;

import application.GameOfLife;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class GameOfLifeInterface extends Application {
	@Override
	public void start(Stage primaryStage) {
		try {

			GridPane root = new GridPane(); // seting root space
			root.setHgap(10);
			root.setVgap(10);
			root.setPadding(new Insets(10, 10, 10, 10));

			root.setGridLinesVisible(true); // na czas testow

			Text menuTitle = new Text("Control panel:"); // add title of user
															// panel
			menuTitle.setFont(Font.font("Tohoma", FontWeight.NORMAL, 15));
			root.add(menuTitle, 0, 0, 2, 1);

			Label rowsNumber = new Label("Rows:");
			root.add(rowsNumber, 0, 1);

			final TextField rowsInput = new TextField();
			root.add(rowsInput, 1, 1);

			Label columnNumber = new Label("Columns:");
			root.add(columnNumber, 5, 1);

			final TextField columnsInput = new TextField();
			root.add(columnsInput, 6, 1);

			Button readValues = new Button(); // read values from screen
			readValues.setText("READ");
			readValues.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent event) {
					String readValues;
					int numberOfRows = 0, numberOfColumns = 0;

					readValues = rowsInput.getText(); // working !!
					numberOfRows = Integer.parseInt(readValues);

					readValues = rowsInput.getText();
					numberOfRows = Integer.parseInt(readValues);
					newGame = new GameOfLife(numberOfRows, numberOfColumns);
				}
			});

			Button start = new Button();
			start.setText("START");
			start.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent event) {
					// TODO Auto-generated method stub

				}
			});

			Button stop = new Button();
			stop.setText("STOP");
			stop.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent event) {
					// TODO Auto-generated method stub

				}
			});

			HBox startAndStop = new HBox(20); // kontener na przyciski
			startAndStop.setAlignment(Pos.BOTTOM_RIGHT);
			startAndStop.getChildren().add(start);
			startAndStop.getChildren().add(stop);
			startAndStop.getChildren().add(readValues);
			root.add(startAndStop, 6, 2);

			Rectangle field = new Rectangle(10, 10, 100, 100);
			field.setFill(Color.RED); // change into bitarea!!
			root.add(field, 0, 4);

			Scene scene = new Scene(root, 600, 600, Color.ORANGE);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());

			primaryStage.setTitle("GameOfLife console");
			primaryStage.setScene(scene);
			primaryStage.show();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		launch(args);
	}
}